# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
    # The most common configuration options are documented and commented below.
    # For a complete reference, please see the online documentation at
    # https://docs.vagrantup.com.

    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://atlas.hashicorp.com/search.
    config.vm.box = "hashicorp/precise32"
    
    config.vm.synced_folder ".", "/vagrant", type: "nfs"   

    config.vm.network "forwarded_port", guest: 11000, host: 11111 ## isportal
    config.vm.network "forwarded_port", guest: 8000, host: 8888
    config.vm.network "forwarded_port", guest: 3000, host: 3100
    config.vm.network "forwarded_port", guest: 8080, host: 3333
    config.vm.network "forwarded_port", guest: 3306, host: 3307 # mysql 

    config.vm.network :private_network, ip:"192.168.13.13"

    config.vm.provider :virtualbox do |vb|
        #   # Don't boot with headless mode
        #   vb.gui = true
        #
        #   # Use VBoxManage to customize the VM. For example to change memory:
        vb.customize ["modifyvm", :id, "--memory", "512"]
        vb.customize ["modifyvm", :id, "--name", "isportal-homestead"]
    end

    if Vagrant::Util::Platform.windows?
        config.vm.provision "shell", inline: <<-SHELL
            sudo apt-get update
            sudo apt-get -y install software-properties-common
            sudo apt-get -y install python-software-properties
            sudo apt-get -y install python-dev
            sudo apt-get -y install python-pip
            sudo apt-get -y install python-crypto
            yes | sudo pip install markupsafe
            yes | sudo pip install 'ansible==1.9.4'
        SHELL
        config.vm.provision :guest_ansible do |ansible|
            ansible.playbook = "ansible/playbook.yml"
        end
    else
        config.vm.provision :ansible do |ansible|
          ansible.playbook = "ansible/playbook.yml"
        end
    end

    config.vm.provision "shell", inline: <<-SHELL
        echo 'LC_ALL="en_US.UTF-8"'  >  /etc/default/locale
    SHELL

end
